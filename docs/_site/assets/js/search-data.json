{"0": {
    "doc": "About",
    "title": "About",
    "content": "This is the base Jekyll theme. You can find out more info about customizing your Jekyll theme, as well as basic Jekyll usage documentation at jekyllrb.com . You can find the source code for Minima at GitHub: jekyll / minima . You can find the source code for Jekyll at GitHub: jekyll / jekyll . ",
    "url": "http://localhost:4000/astrocook/about/",
    "relUrl": "/about/"
  },"1": {
    "doc": "About",
    "title": "About",
    "content": "Astrocook is developed at INAF-Osservatorio Astronomico di Trieste by Guido Cupani, Giorgio Calderone, and Stefano Russo, with contributions from Valentina D‚ÄôOdorico, Stefano Cristiani, and Giuliano Taffoni. ",
    "url": "http://localhost:4000/astrocook/about.html",
    "relUrl": "/about.html"
  },"2": {
    "doc": "About",
    "title": "Cite Astrocook",
    "content": "If you publish scientific results obtained with Astrocook, please cite this article in the references: . | Cupani et al., Astrocook: your starred chef for spectral analysis, 2020, Proc. SPIE 11452, 114521U (SPIE digital library) | . Other articles about Astrocook are: . | Cupani et al., Astrocook: your starred chef for spectral analysis, SPIE, in press | Cupani et al., Astrocook: quasar spectral analysis made easy, ADASS XXX, submitted | Cupani et al., From ESPRESSO to the Future - Analysis of QSO Spectra with the Astrocook Package, 2020, ADASS XXVII, ASPC 552, 187 (ads) | Cupani et al., Astrocook: a thousand recipes to cook a spectrum, 2018, Proc. SPIE 10707, 1070723 (ads) | . ",
    "url": "http://localhost:4000/astrocook/about.html#cite-astrocook",
    "relUrl": "/about.html#cite-astrocook"
  },"3": {
    "doc": "About",
    "title": "Disclaimer",
    "content": "THE SOFTWARE ASTROCOOK IS PROVIDED ‚Äã‚ÄúAS IS‚Äù. THE DEVELOPERS OF ASTROCOOK MAKE NO OTHER WARRANTIES, EXPRESS OR IMPLIED, AND HEREBY DISCLAIM ALL IMPLIED WARRANTIES, INCLUDING ANY WARRANTY OF MERCHANTABILITY AND WARRANTY OF FITNESS FOR A PARTICULAR PURPOSE. ",
    "url": "http://localhost:4000/astrocook/about.html#disclaimer",
    "relUrl": "/about.html#disclaimer"
  },"4": {
    "doc": "Modeling absorbers",
    "title": "Modeling absorbers",
    "content": " ",
    "url": "http://localhost:4000/astrocook/absorbers.html",
    "relUrl": "/absorbers.html"
  },"5": {
    "doc": "Modeling absorbers",
    "title": "Table of contents",
    "content": ". | Voigt-profile fitting üöß | An interactive example üöß | Automatize the workflow üöß | . ",
    "url": "http://localhost:4000/astrocook/absorbers.html#table-of-contents",
    "relUrl": "/absorbers.html#table-of-contents"
  },"6": {
    "doc": "Modeling absorbers",
    "title": "Voigt-profile fitting üöß",
    "content": " ",
    "url": "http://localhost:4000/astrocook/absorbers.html#voigt-profile-fitting-",
    "relUrl": "/absorbers.html#voigt-profile-fitting-"
  },"7": {
    "doc": "Modeling absorbers",
    "title": "An interactive example üöß",
    "content": " ",
    "url": "http://localhost:4000/astrocook/absorbers.html#an-interactive-example-",
    "relUrl": "/absorbers.html#an-interactive-example-"
  },"8": {
    "doc": "Modeling absorbers",
    "title": "Automatize the workflow üöß",
    "content": " ",
    "url": "http://localhost:4000/astrocook/absorbers.html#automatize-the-workflow-",
    "relUrl": "/absorbers.html#automatize-the-workflow-"
  },"9": {
    "doc": "Absorbers cookbook",
    "title": "Absorbers cookbook",
    "content": " ",
    "url": "http://localhost:4000/astrocook/absorbers_cb.html",
    "relUrl": "/absorbers_cb.html"
  },"10": {
    "doc": "Absorbers cookbook",
    "title": "Table of contents",
    "content": ". | New system üöß | New systems from lines üöß | Improve systems üöß | Complete systems üöß | Fit systems üöß | Other recipes üöß | . New system üöß . New systems from lines üöß . Improve systems üöß . Complete systems üöß . Fit systems üöß . Other recipes üöß . ",
    "url": "http://localhost:4000/astrocook/absorbers_cb.html#table-of-contents",
    "relUrl": "/absorbers_cb.html#table-of-contents"
  },"11": {
    "doc": "Common tasks",
    "title": "Common tasks",
    "content": "A reference collection of step-by-step analysis procedures . ",
    "url": "http://localhost:4000/astrocook/common.html",
    "relUrl": "/common.html"
  },"12": {
    "doc": "Continuum estimation",
    "title": "Continuum estimation",
    "content": "With Astrocook, you can estimate the emission continuum of a source by iteratively detecting and removing the absorption lines. Here we use a quasar spectrum as an example, but the task can be generalized to other sources. ",
    "url": "http://localhost:4000/astrocook/continuum.html",
    "relUrl": "/continuum.html"
  },"13": {
    "doc": "Continuum estimation",
    "title": "Table of contents",
    "content": ". | Start a session üöß | Detect the absorption lines üöß | Interpolate the continuum üöß | . ",
    "url": "http://localhost:4000/astrocook/continuum.html#table-of-contents",
    "relUrl": "/continuum.html#table-of-contents"
  },"14": {
    "doc": "Continuum estimation",
    "title": "Start a session üöß",
    "content": " ",
    "url": "http://localhost:4000/astrocook/continuum.html#start-a-session-",
    "relUrl": "/continuum.html#start-a-session-"
  },"15": {
    "doc": "Continuum estimation",
    "title": "Detect the absorption lines üöß",
    "content": " ",
    "url": "http://localhost:4000/astrocook/continuum.html#detect-the-absorption-lines-",
    "relUrl": "/continuum.html#detect-the-absorption-lines-"
  },"16": {
    "doc": "Continuum estimation",
    "title": "Interpolate the continuum üöß",
    "content": " ",
    "url": "http://localhost:4000/astrocook/continuum.html#interpolate-the-continuum-",
    "relUrl": "/continuum.html#interpolate-the-continuum-"
  },"17": {
    "doc": "Continuum cookbook",
    "title": "Continuum cookbook",
    "content": " ",
    "url": "http://localhost:4000/astrocook/continuum_cb.html",
    "relUrl": "/continuum_cb.html"
  },"18": {
    "doc": "Continuum cookbook",
    "title": "Table of contents",
    "content": ". | Find lines üöß | Continuum from nodes üöß | Other recipes üöß | . Find lines üöß . Continuum from nodes üöß . Other recipes üöß . ",
    "url": "http://localhost:4000/astrocook/continuum_cb.html#table-of-contents",
    "relUrl": "/continuum_cb.html#table-of-contents"
  },"19": {
    "doc": "Cookbooks",
    "title": "Cookbooks",
    "content": "A close-up look at all the available recipes . ",
    "url": "http://localhost:4000/astrocook/cookbook.html",
    "relUrl": "/cookbook.html"
  },"20": {
    "doc": "Managing data",
    "title": "Managing data",
    "content": "More details on what you can do with your data . ",
    "url": "http://localhost:4000/astrocook/data.html",
    "relUrl": "/data.html"
  },"21": {
    "doc": "General cookbook",
    "title": "General cookbook",
    "content": " ",
    "url": "http://localhost:4000/astrocook/general_cb.html",
    "relUrl": "/general_cb.html"
  },"22": {
    "doc": "General cookbook",
    "title": "Table of contents",
    "content": ". | Open session | Equalize sessions | Combine sessions | Import structure | Modify structures | Extract region | Convert x axis | Convert y axis | Scale y axis | Scale y axis to median üöß | Shift to and from frame üöß | Rebin spectrum | Convolve with gaussian üöß | Estimate resolution üöß | Estimate SNR üöß | Refresh the GUI | . ",
    "url": "http://localhost:4000/astrocook/general_cb.html#table-of-contents",
    "relUrl": "/general_cb.html#table-of-contents"
  },"23": {
    "doc": "General cookbook",
    "title": "Open session",
    "content": "| Method | GUIPanelSession._on_open | . | Parameters | . | path: Path to an .acs, .fits, or .json file | . | . | JSON template | { \"cookbook\": \"_panel_sess\", \"recipe\": \"_on_open\", \"params\": { \"path\": \"XXX\" } }, | . Open a new session. Session can be opened from previously saved Astrocook archive (.acs), a FITS file (.fits), or a JSON file (.json). In the last case, the session is built by running the workflow in the JSON file, and the workflow is inherited in the session log. ",
    "url": "http://localhost:4000/astrocook/general_cb.html#open-session",
    "relUrl": "/general_cb.html#open-session"
  },"24": {
    "doc": "General cookbook",
    "title": "Equalize sessions",
    "content": "| Method | GUIPanelSession.equalize | . | Parameters | . | xmin: Minimum wavelength (nm) | xmax: Maximum wavelength (nm) | _sel: Selected sessions | . | . | JSON template | { \"cookbook\": \"_panel_sess\", \"recipe\": \"equalize\", \"params\": { \"xmin\": \"XXX\", \"xmax\": \"XXX\", \"_sel\": [ XXX, XXX ] } } | . Equalize the flux level of one session to another one. The last-selected session is equalized to the first-selected one. The equalization factor is the ratio of the median flux within the specified wavelength interval. When the recipe is called from the GUI, the _sel parameter is defined automatically by clicking on the two input sessions. ",
    "url": "http://localhost:4000/astrocook/general_cb.html#equalize-sessions",
    "relUrl": "/general_cb.html#equalize-sessions"
  },"25": {
    "doc": "General cookbook",
    "title": "Combine sessions",
    "content": "| Method | GUIPanelSession.combine | . | Parameters | . | name: Name of the output session | . | . Combine two or more sessions. A new session is created, with a new spectrum containing all entries from the spectra of the combined sessions. Other objects from the sessions (line lists, etc.) are discarded. When the recipe is called from the GUI, the _sel parameter is defined automatically by clicking on the input sessions. ",
    "url": "http://localhost:4000/astrocook/general_cb.html#combine-sessions",
    "relUrl": "/general_cb.html#combine-sessions"
  },"26": {
    "doc": "General cookbook",
    "title": "Import structure",
    "content": "| Method | GUIPanelSession.struct_import | . | Parameters | . | struct: Structure | mode: Mode (replace or append) | . | . Import a data structure from a session into the current one. The structure to be imported is described by a string with the session number and the structure tag (spec, lines, systs), separated by a comma (e.g. 0,spec, meaning ‚Äúspectrum from session 0‚Äù). The imported structure is either replaced or appended to the corresponding one in the current session. ",
    "url": "http://localhost:4000/astrocook/general_cb.html#import-structure",
    "relUrl": "/general_cb.html#import-structure"
  },"27": {
    "doc": "General cookbook",
    "title": "Modify structures",
    "content": "| Method | GUIPanelSession.struct_modify | . | Parameters | . | col_A: Column A | col_B: Column B or scalar | struct_out: Output column | op: Binary operator | . | . Modify a data structure using a binary operator. An output column is computed applying a binary operator to two input columns, or an input column and a scalar. Columns are described by a string with the session number, the structure tag (spec, lines, systs), and the column name separated by a comma (e.g. 0,spec,x, meaning ‚Äúcolumn x of spectrum from session 0‚Äù). They can be from different data structures only if they have the same length. If the output column already exists, it is overwritten. ",
    "url": "http://localhost:4000/astrocook/general_cb.html#modify-structures",
    "relUrl": "/general_cb.html#modify-structures"
  },"28": {
    "doc": "General cookbook",
    "title": "Extract region",
    "content": "| Method | CookbookGeneral.region_extract | . | Parameters | . | xmin: Minimum wavelength (nm) | xmax: Maximum wavelength (nm) | . | . Extract a spectral region. The region between a minimum and a maximum wavelength is extracted from the data structures in the current session (these include the selected spectral range with all the lines, and the absorption systems that fall within). A new session with the extracted data structures is created. ",
    "url": "http://localhost:4000/astrocook/general_cb.html#extract-region",
    "relUrl": "/general_cb.html#extract-region"
  },"29": {
    "doc": "General cookbook",
    "title": "Convert x axis",
    "content": "| Method | CookbookGeneral.x_convert | . | Parameters | . | zem: Emission redshift | xunit: Unit of wavelength or velocity | . | . Convert the x axis to wavelength or velocity units. The x axis can be converted to any unit of wavelength or velocity (default: nm and km/s). The conversion applies to both the spectrum and the line list. When converting to and from velocity units, the zero point is set at (1+zem)Œª_Lya (where Œª_Lya = 121.567 nm is the rest-frame wavelength of the Lyman-alpha transition). ",
    "url": "http://localhost:4000/astrocook/general_cb.html#convert-x-axis",
    "relUrl": "/general_cb.html#convert-x-axis"
  },"30": {
    "doc": "General cookbook",
    "title": "Convert y axis",
    "content": "| Method | CookbookGeneral.y_convert | . | Parameters | . | yunit: Unit (of flux density) | . | . Convert the y axis to different units. The y axis can be expressed in different units depending on how it was calibrated (default: erg/(cm^2 s nm)). It can be converted to any unit of the same physical quantity. The conversion applies to both the spectrum and the line list. ",
    "url": "http://localhost:4000/astrocook/general_cb.html#convert-y-axis",
    "relUrl": "/general_cb.html#convert-y-axis"
  },"31": {
    "doc": "General cookbook",
    "title": "Scale y axis",
    "content": "| Method | CookbookGeneral.y_scale | . | Parameters | . | fact: Multiplicative factor | . | . Scale the y axis by a constant factor. The spectrum and the line list are rescaled in place, without starting a new session. ",
    "url": "http://localhost:4000/astrocook/general_cb.html#scale-y-axis",
    "relUrl": "/general_cb.html#scale-y-axis"
  },"32": {
    "doc": "General cookbook",
    "title": "Scale y axis to median üöß",
    "content": " ",
    "url": "http://localhost:4000/astrocook/general_cb.html#scale-y-axis-to-median-",
    "relUrl": "/general_cb.html#scale-y-axis-to-median-"
  },"33": {
    "doc": "General cookbook",
    "title": "Shift to and from frame üöß",
    "content": " ",
    "url": "http://localhost:4000/astrocook/general_cb.html#shift-to-and-from-frame-",
    "relUrl": "/general_cb.html#shift-to-and-from-frame-"
  },"34": {
    "doc": "General cookbook",
    "title": "Rebin spectrum",
    "content": "| Method | CookbookGeneral.rebin | . | Parameters | . | xstart: Start wavelength (nm) | xend: End wavelength (nm) | dx: Step in x | xunit: Unit of wavelength or velocity | norm: Return normalized spectrum, if continuum exists | . | . Rebin a spectrum with a given step. The step can be expressed in any unit of wavelength or velocity. Start and end wavelength may be specified, e.g. to align the rebinned spectrum to other spectra. If start or end wavelength are None, rebinning is performed from the first to the last wavelength of the input spectrum. A new session is created with the rebinned spectrum. Other objects from the old session (line lists, etc.) are discarded. ",
    "url": "http://localhost:4000/astrocook/general_cb.html#rebin-spectrum",
    "relUrl": "/general_cb.html#rebin-spectrum"
  },"35": {
    "doc": "General cookbook",
    "title": "Convolve with gaussian  üöß",
    "content": " ",
    "url": "http://localhost:4000/astrocook/general_cb.html#convolve-with-gaussian--",
    "relUrl": "/general_cb.html#convolve-with-gaussian--"
  },"36": {
    "doc": "General cookbook",
    "title": "Estimate resolution  üöß",
    "content": " ",
    "url": "http://localhost:4000/astrocook/general_cb.html#estimate-resolution--",
    "relUrl": "/general_cb.html#estimate-resolution--"
  },"37": {
    "doc": "General cookbook",
    "title": "Estimate SNR üöß",
    "content": " ",
    "url": "http://localhost:4000/astrocook/general_cb.html#estimate-snr-",
    "relUrl": "/general_cb.html#estimate-snr-"
  },"38": {
    "doc": "General cookbook",
    "title": "Refresh the GUI",
    "content": "_refresh(self, init_cursor=False, init_tab=True, autolim=True, autosort=True, _xlim=None): . | Method | GUI._refresh | . | Parameters | . | init_cursor: Initialize system cursor | init_tab: Initialize tables | autolim: Automatically set limits to the plot axes | autosort: Automatically sort tables | _xlim: Limits for the plot x axis | . | . | JSON template | { \"cookbook\": \"\", \"recipe\": \"_refresh\", \"params\": { \"autosort\": false } } | . Refresh the GUI. This recipe is designed for internal use. The user should call it only at the end of a workflow, to update the visualization of the data in the GUI. autosort should be set to false not to interfere with other possible sorting of the tables in the workflow. Other parameters should be disregarded. ",
    "url": "http://localhost:4000/astrocook/general_cb.html#refresh-the-gui",
    "relUrl": "/general_cb.html#refresh-the-gui"
  },"39": {
    "doc": "Graphs",
    "title": "Graphs",
    "content": " ",
    "url": "http://localhost:4000/astrocook/graphs.html",
    "relUrl": "/graphs.html"
  },"40": {
    "doc": "Graphs",
    "title": "Table of contents",
    "content": ". | Handle graphs üöß | Interact with the plots üöß | . ",
    "url": "http://localhost:4000/astrocook/graphs.html#table-of-contents",
    "relUrl": "/graphs.html#table-of-contents"
  },"41": {
    "doc": "Graphs",
    "title": "Handle graphs üöß",
    "content": " ",
    "url": "http://localhost:4000/astrocook/graphs.html#handle-graphs-",
    "relUrl": "/graphs.html#handle-graphs-"
  },"42": {
    "doc": "Graphs",
    "title": "Interact with the plots üöß",
    "content": " ",
    "url": "http://localhost:4000/astrocook/graphs.html#interact-with-the-plots-",
    "relUrl": "/graphs.html#interact-with-the-plots-"
  },"43": {
    "doc": "Using the GUI",
    "title": "Using the GUI",
    "content": " ",
    "url": "http://localhost:4000/astrocook/gui.html",
    "relUrl": "/gui.html"
  },"44": {
    "doc": "Using the GUI",
    "title": "Table of contents",
    "content": ". | Launch the GUI | Manage sessions | Use recipes | Save sessions | Quit the GUI | . ",
    "url": "http://localhost:4000/astrocook/gui.html#table-of-contents",
    "relUrl": "/gui.html#table-of-contents"
  },"45": {
    "doc": "Using the GUI",
    "title": "Launch the GUI",
    "content": "You can launch the Astrocook GUI: . $ cd /your/path/astrocook/ $ python ac_gui.py . This will open a blank main window: . ‚ùóÔ∏è On some macOS systems, python ac_gui.py will produce an error message like this: . This program needs access to the screen. Please run with a Framework build of python, and only when you are logged in on the main display of your Mac. If this happens, use pythonw ac_gui.py instead. ‚ùóÔ∏è You are encouraged to add an astrocook command to your shell configuration. On macOS, you can type: . echo \"alias astrocook='pythonw /your/path/to/astrocook-1.0.0-rc.1/ac_gui.py'\" &gt;&gt; ~/.bash_profile . To load data, you can choose File &gt; Open... on the menu bar (ctrl+O or ‚åò+O, depending on the system) and browse through your file system. Alternatively, you can specify one or more paths directly at launch: . $ python ac_gui.py /path/to/1st_spec.fits /path/to/2nd_spec.fits . In this case the main window will display a list: . If the format of the data is not recognized, Astrocook will fall back on a blank window. ",
    "url": "http://localhost:4000/astrocook/gui.html#launch-the-gui",
    "relUrl": "/gui.html#launch-the-gui"
  },"46": {
    "doc": "Using the GUI",
    "title": "Manage sessions",
    "content": "Each item in the main window is called a session. A session is created whenever a new spectrum is loaded. When you select a session on the main window, its spectrum is displayed in the plot window: . To perform the analysis, you need to select a session and access one of the several recipes available from the menu bar. The information extracted by the analysis is continuously attached to the selected session. This means that, e.g., a list of absorption lines is always attached to the spectrum it has been extracted from. You can switch between sessions at any time, selecting them on the main window. When you select a session, you always retrieve the latest snapshot of the analysis, together with all the information extracted so far. ‚ùóÔ∏è If no session is selected and you click on the first session, it will not be selected unless you hold ctrl as well. ",
    "url": "http://localhost:4000/astrocook/gui.html#manage-sessions",
    "relUrl": "/gui.html#manage-sessions"
  },"47": {
    "doc": "Using the GUI",
    "title": "Use recipes",
    "content": "Astrocook provides you with (broadly speaking) three kinds of recipes for the analysis: . | recipes to manipulate sessions, combining and sharing data structures among them: these are grouped in the Edit menu; | recipes to manage the plot window and the additional windows to display the data: these are grouped in the View menu; | general analysis recipes to ‚Äúcook your spectrum‚Äù: these are spread between the Recipes menu (atomic operations and simple workflows) and the Set menus menu (complex workflows for specific tasks). | . Typically, when you choose a recipe from the menu bar a dialog window appears. The dialog window displays a brief description of the recipe and allows you to edit the parameters. ‚ùóÔ∏è When you click on the run button in a dialog window, the whole GUI freezes until the operation is complete. You should consider this before using recipes that require long running times. At the beginning of the analysis, only a limited set of recipes is available from the menu bar, while others are greyed out. This happens because the greyed-out recipes require some piece of information that has not been extracted yet (e.g., to fit an absorption systems you need to detect it first). As you progresses with the analysis, more and more recipes become available. ",
    "url": "http://localhost:4000/astrocook/gui.html#use-recipes",
    "relUrl": "/gui.html#use-recipes"
  },"48": {
    "doc": "Using the GUI",
    "title": "Save sessions",
    "content": "You can save a session by clicking on it on the main window and choosing File &gt; Save... on the menu bar (ctrl+S or ‚åò+S, depending on the system). Sessions are saved as .acs archives that can be directly opened by Astrocook (either with File &gt; Open... or as argument of python ac_gui.py from the command line).acs archives can also be extracted with . $ tar -zxvf /path/to/archive.acs . ",
    "url": "http://localhost:4000/astrocook/gui.html#save-sessions",
    "relUrl": "/gui.html#save-sessions"
  },"49": {
    "doc": "Using the GUI",
    "title": "Quit the GUI",
    "content": "You can quit Astrocook with File &gt; Quit... on the menu bar (ctrl+Q or ‚åò+Q, depending on the system) or by closing the main window. ‚ùóÔ∏è When you quit Astrocook, all unsaved sessions will be lost. ",
    "url": "http://localhost:4000/astrocook/gui.html#quit-the-gui",
    "relUrl": "/gui.html#quit-the-gui"
  },"50": {
    "doc": "Home",
    "title": "Astrocook üç™",
    "content": "A thousand recipes to cook a spectrum . Astrocook is a software environment to analyze quasar spectra. It includes: . | a set of algorithms to model spectral features in emission and absorption (continuum, spectral lines, complex absorption systems); | a graphical user interface (GUI) to perform the analysis interactively; | a scripting utility to automatize the analysis and make it fully reproducible. | . This site serves as a documentation for Astrocook v1.0.0. It shows how to get started with the software and its GUI, how to manage the data, and how to perform some common tasks. It also provides a reference of the recipes available in the code. The documentation is still sparse, but is constantly improved. An ‚ùóÔ∏è highlights an important feature, or sometimes an issue of the code that is going to be solved in the next future. A üöß denotes a section of the documentation that needs to be completed. ",
    "url": "http://localhost:4000/astrocook/#astrocook-",
    "relUrl": "/#astrocook-"
  },"51": {
    "doc": "Home",
    "title": "Home",
    "content": " ",
    "url": "http://localhost:4000/astrocook/",
    "relUrl": "/"
  },"52": {
    "doc": "Merging spectra",
    "title": "Merging spectra",
    "content": " ",
    "url": "http://localhost:4000/astrocook/merge.html",
    "relUrl": "/merge.html"
  },"53": {
    "doc": "Merging spectra",
    "title": "Table of contents",
    "content": ". | Rescale the spectra | Equalize the spectra | Combine the spectra | Rebin the combined spectrum | . Merging is what you do to combine two or more spectra into a single one. In this tutorial, you will learn how to merge two spectra with different wavelength range, like those obtained from different arms of the same instrument (in our case, UVB and VIS arm of VLT X-shooter). The same procedure can be applied to the case of several spectra with the same wavelength range. We assume that the spectra have already been loaded in Astrocook: . ",
    "url": "http://localhost:4000/astrocook/merge.html#table-of-contents",
    "relUrl": "/merge.html#table-of-contents"
  },"54": {
    "doc": "Merging spectra",
    "title": "Rescale the spectra",
    "content": "| The rescaling procedure can be run automatically with $ python ac_gui.py rescale.json in the test/ directory. | . The first step is to rescale the spectra to the same flux level, to correct for inaccuracies in flux calibration. To display both spectra in the main graph, select the second one and choose View &gt; Edit graph elements, then modify the text in the box as follows: . Clicking on Apply and zooming into the plot, you will see that in the UVB/VIS superposition region the flux is slightly mismatched: . To rescale the NIR spectra to the VIS one, select it on the main window and choose Edit &gt; Scale y axis.... In the dialog window, insert a suitable multiplicative factor and click on Run: . Selecting both spectra and zooming again, you can check that they are now matching: . You may need to rescale a spectrum several times to find a good matching. ‚ùóÔ∏è Please note that the spectra are rescaled in place, without starting a new session. To undo a rescaling, you need to rescale the spectrum again with an inverse factor. ",
    "url": "http://localhost:4000/astrocook/merge.html#rescale-the-spectra",
    "relUrl": "/merge.html#rescale-the-spectra"
  },"55": {
    "doc": "Merging spectra",
    "title": "Equalize the spectra",
    "content": "| The equalization procedure can be run automatically with $ python ac_gui.py equalize.json in the test/ directory. | . Two spectra can also be rescaled automatically. In the main window, select the two sessions and choose Edit &gt; Equalize sessions.... You will be asked to define a spectral region to be used as reference: . On Run, the recipe will compute the median fluxes of the two spectra in the reference region, and use their ratio to equalize them. By default, the spectrum of the last-selected region is rescaled to the other one. ‚ùóÔ∏è Equalization can be performed only on two sessions at a time. ",
    "url": "http://localhost:4000/astrocook/merge.html#equalize-the-spectra",
    "relUrl": "/merge.html#equalize-the-spectra"
  },"56": {
    "doc": "Merging spectra",
    "title": "Combine the spectra",
    "content": "| The equalization and combination procedure can be run automatically with $ python ac_gui.py equalize_combine.json in the test/ directory. | . Once spectra are rescaled, you need to create a combined session out of the individual ones. In the main window, select both sessions and choose Edit &gt; Combine sessions.... You will be asked for a name for the combination: . The asterisk will be replaced by a concatenation of the selected names (qso_NIR_qso_VIS in this case). You can alternatively define a different name. On Run, a new session will be created: . The spectrum of this new session contains all the entries of the combined spectra. This means that the pixels of the combined spectrum may overlap with each other (as they keep their original size, defined by xmin and xmax in the spectrum table). The same method can be used to combine more than two spectra. ‚ùóÔ∏è When sessions are combined, the data structures associated with the spectrum (line lists and system lists) are merged. ",
    "url": "http://localhost:4000/astrocook/merge.html#combine-the-spectra",
    "relUrl": "/merge.html#combine-the-spectra"
  },"57": {
    "doc": "Merging spectra",
    "title": "Rebin the combined spectrum",
    "content": "| The equalization, combination, and rebinning procedure can be run automatically with $ python ac_gui.py equalize_combine_rebin.json in the test/ directory. | . It is generally useful to rebin the combined spectrum into a new wavelength grid, to avoid dealing with overlapping pixels. This is done by selecting the combined session in the main window and choosing Recipes &gt; Rebin spectrum.... You will be asked to provide a step in x and a unit of wavelength or velocity for the output spectrum (and optionally a wavelength range): . In this case, the spectrum will be rebinned into a grid with a fixed step of 10 km/s. The grid is designed to cover the whole wavelength range of the input spectrum. The rebinned spectrum will appear on the plot after completion: . ‚ùóÔ∏è Rebinning may take a long time if the grid is fine and/or the wavelength range is wide. You can rebin any spectrum in any session using the same procedure. ‚ùóÔ∏è Please remember that the rebinning procedure interferes with the statistics of your data, as it introduces correlation among adjacent pixels. If accurate flux statistics is required, please avoid rebinning your spectra when it is not absolutely necessary. ",
    "url": "http://localhost:4000/astrocook/merge.html#rebin-the-combined-spectrum",
    "relUrl": "/merge.html#rebin-the-combined-spectrum"
  },"58": {
    "doc": "Other tools",
    "title": "Other tools",
    "content": " ",
    "url": "http://localhost:4000/astrocook/other.html",
    "relUrl": "/other.html"
  },"59": {
    "doc": "Other tools",
    "title": "Table of contents",
    "content": ". | Visualization üöß | Metadata üöß | . ",
    "url": "http://localhost:4000/astrocook/other.html#table-of-contents",
    "relUrl": "/other.html#table-of-contents"
  },"60": {
    "doc": "Other tools",
    "title": "Visualization üöß",
    "content": " ",
    "url": "http://localhost:4000/astrocook/other.html#visualization-",
    "relUrl": "/other.html#visualization-"
  },"61": {
    "doc": "Other tools",
    "title": "Metadata üöß",
    "content": " ",
    "url": "http://localhost:4000/astrocook/other.html#metadata-",
    "relUrl": "/other.html#metadata-"
  },"62": {
    "doc": "Setup",
    "title": "Setup",
    "content": " ",
    "url": "http://localhost:4000/astrocook/setup.html",
    "relUrl": "/setup.html"
  },"63": {
    "doc": "Setup",
    "title": "Table of contents",
    "content": ". | Dependencies | Install the software | Troubleshooting | . ",
    "url": "http://localhost:4000/astrocook/setup.html#table-of-contents",
    "relUrl": "/setup.html#table-of-contents"
  },"64": {
    "doc": "Setup",
    "title": "Dependencies",
    "content": "Astrocook is written in Python 3 and requires the following packages: . | Astropy 4.0 | SciPy 1.3.1 | Specutils 0.6 | NumPy 1.17.3 | LmFit 1.0.0 | Cycler 0.10.0 | StatsModels 0.10.1 | matplotlib 3.1.1 | Sphinx 2.2.0 | wxPython 4.0.4 | . You are suggested to manage the dependencies using Conda. The quickest way to do it is to get the Miniconda installer (instructions here) and to open an environment dedicated to Astrocook: . $ conda create -n astrocook python=3.7 $ source activate astrocook . This is an example of how you can install the required packages from the Conda repository: . $ conda install -c anaconda package-name=package-version . If this doesn‚Äôt work, look for the package in the Anaconda Cloud. ",
    "url": "http://localhost:4000/astrocook/setup.html#dependencies",
    "relUrl": "/setup.html#dependencies"
  },"65": {
    "doc": "Setup",
    "title": "Install the software",
    "content": "You can download the latest release of Astrocook (v1.0.0-rc.1) from this page. Alternatively, you can clone the GitHub repository on your local machine and checkout the specific tag: . $ cd /your/path/ $ git clone https://github.com/DAS-OATs/astrocook $ git checkout tag/v1.0.0-rc.1 . Some additional features may be available in the develop branch before they are included in an official release. To fetch the last commit of the develop branch: . $ cd /your/path/astrocook/ $ git fetch origin develop $ git checkout develop . ",
    "url": "http://localhost:4000/astrocook/setup.html#install-the-software",
    "relUrl": "/setup.html#install-the-software"
  },"66": {
    "doc": "Setup",
    "title": "Troubleshooting",
    "content": "Occasionally, Astrocook may behave erratically. If this happens, you are strongly encouraged to report the bug. ‚ùóÔ∏è If Astrocook stops responding, you can kill the GUI with ctrl+C. Since this will destroy all sessions, you are suggested to frequently save your analysis. ",
    "url": "http://localhost:4000/astrocook/setup.html#troubleshooting",
    "relUrl": "/setup.html#troubleshooting"
  },"67": {
    "doc": "Getting started",
    "title": "Getting started",
    "content": "Everything you need to know to quickly start your analysis . ",
    "url": "http://localhost:4000/astrocook/start.html",
    "relUrl": "/start.html"
  },"68": {
    "doc": "Data structures",
    "title": "Data structures",
    "content": " ",
    "url": "http://localhost:4000/astrocook/structures.html",
    "relUrl": "/structures.html"
  },"69": {
    "doc": "Data structures",
    "title": "Table of contents",
    "content": ". | Spectra | List of lines | List of absorption systems | . Astrocook manages three main data structures: spectra, line lists, and system lists. All three structures include a data table (actually an Astropy Table object) and a metadata dictionary. They are formatted as FITS files and bundled into a .acs archive when you save a snapshot of a session. The .acs archive may also contain other ancillary data, as described below. To display the data tables, choose View &gt; Spectrum table (or Line table or System table) from the menu bar. ‚ùóÔ∏è Long tables can take a long time to display. ",
    "url": "http://localhost:4000/astrocook/structures.html#table-of-contents",
    "relUrl": "/structures.html#table-of-contents"
  },"70": {
    "doc": "Data structures",
    "title": "Spectra",
    "content": "Each Astrocook session is based on a spectrum, i.e. a table that pairs a flux-like quantity to a wavelength-like quantity. We use the expressions ‚Äúflux-like‚Äù and ‚Äúwavelength-like‚Äù to be as general as possible: from the point of view of structure, it doesn‚Äôt matter if the spectrum is expressed in wavelengths or frequencies, or if the flux density is calibrated in physical units or not. The fundamental columns of a spectrum are: . | x: the wavelength-like independent variable; | xmin, xmax: the interval in x values in which the flux-like quantity is integrated; | y, dy: the flux-like dependent variable and its error. | . The interval [xmin, xmax] is also called a pixel, because in some cases it maps to a physical pixel in the spectrograph detector. Other columns that frequently appear in a spectrum are: . | y_conv: a convolution of y with some smoothing kernel; | lines_mask: a boolean mask of the detected lines (see below); | cont: the spectral continuum, i.e. the component of y that remains after removing local features (e.g. absorption lines) and smoothing out noise; | model: a spectral model, i.e. a model of both the continuum and the absorption systems (see below; | deabs: a deabsorbed spectrum, i.e. an equivalent of y after the absorption lines have been removed using the model; | resol: the spectral resolution at x; | fit_mask: a boolean mask of the regions used to fit the model of the absorption systems. | . You are free to add other columns to the spectrum or edit the existing ones (as explained here). ",
    "url": "http://localhost:4000/astrocook/structures.html#spectra",
    "relUrl": "/structures.html#spectra"
  },"71": {
    "doc": "Data structures",
    "title": "List of lines",
    "content": "When you detect spectral lines (either in emission or absorption), they are formatted into a table that is added to the session. The information to populate the table columns is directly extracted from the spectrum where the lines have been detected: . | x: the line center, corresponding to the x value of a pixel in the spectrum; | xmin, xmax: the boundaries of the interval covered by the line, also corresponding to the x values of two pixels in the spectrum; | y, dy: values of y and dy at x from the spectrum; | source: column of the spectrum that was used to detect the line. | . Please note that in this case [xmin, xmax] do not map to a single pixel in the spectrum, but to a range of pixels. Lines are not typically detected on the raw y column of the spectrum, because in general the noise on y makes it very hard to discriminate between legitimate lines and random fluctuations. This is the reason for keeping track of the source of the detected lines. A typical source value is y_conv, i.e. a convolution of the y column of the spectrum with some smoothing kernel (see above) but it may be any other column. ",
    "url": "http://localhost:4000/astrocook/structures.html#list-of-lines",
    "relUrl": "/structures.html#list-of-lines"
  },"72": {
    "doc": "Data structures",
    "title": "List of absorption systems",
    "content": "Absorption lines detected in quasar spectra are frequently grouped into absorption systems, i.e. sets of lines produced by different ions at the same redshift. In our convention, a system has one and only one redshift. This means that e.g. different doublets at a similar redshift are treated as separated (one redshift per doublet). It also means that each component of an absorbers with a complex velocity structure (also sometimes called a ‚Äúsystem‚Äù) is considered a system in itself. When you detect absorption systems, they are also formatted into a table added to the session. The table contains the information to model the absorption systems: . | func: the function used to define the model (currently, only the Voigt function voigt is available); | series: the list of ionic transitions that are modeled; | z0: the starting redshift, typically computed from the x value of one or more absorption lines; | z, dz: the redshift of the model and its error; | logN, dlogN: the logarithm of the column density used in the Voigt function (in cm^-2) and its error; | b, db: the doppler parameter used in the Voigt function and its error; | resol: the resolution adopted by the model; | chi2r: the reduced chi-squared between the model and the data; | id: the identification number of the model. | . The parameters of the Voigt function (z, logN, and b) may be either guess or fitted parameters. As a rule, when a system is added to the list it is also fitted to the spectrum: z, logN, and b are the best-fit values and chi2r gives an estimation of the goodness of fit. ",
    "url": "http://localhost:4000/astrocook/structures.html#list-of-absorption-systems",
    "relUrl": "/structures.html#list-of-absorption-systems"
  },"73": {
    "doc": "Tables",
    "title": "Tables",
    "content": " ",
    "url": "http://localhost:4000/astrocook/tables.html",
    "relUrl": "/tables.html"
  },"74": {
    "doc": "Tables",
    "title": "Table of contents",
    "content": ". | Browse tables üöß | Interact with the data üöß | . ",
    "url": "http://localhost:4000/astrocook/tables.html#table-of-contents",
    "relUrl": "/tables.html#table-of-contents"
  },"75": {
    "doc": "Tables",
    "title": "Browse tables üöß",
    "content": " ",
    "url": "http://localhost:4000/astrocook/tables.html#browse-tables-",
    "relUrl": "/tables.html#browse-tables-"
  },"76": {
    "doc": "Tables",
    "title": "Interact with the data üöß",
    "content": " ",
    "url": "http://localhost:4000/astrocook/tables.html#interact-with-the-data-",
    "relUrl": "/tables.html#interact-with-the-data-"
  },"77": {
    "doc": "Templates cookbook",
    "title": "Templates cookbook",
    "content": " ",
    "url": "http://localhost:4000/astrocook/templates_cb.html",
    "relUrl": "/templates_cb.html"
  },"78": {
    "doc": "Templates cookbook",
    "title": "Table of contents",
    "content": ". | Blackbody template üöß | Power-law template üöß | . ",
    "url": "http://localhost:4000/astrocook/templates_cb.html#table-of-contents",
    "relUrl": "/templates_cb.html#table-of-contents"
  },"79": {
    "doc": "Templates cookbook",
    "title": "Blackbody template üöß",
    "content": " ",
    "url": "http://localhost:4000/astrocook/templates_cb.html#blackbody-template-",
    "relUrl": "/templates_cb.html#blackbody-template-"
  },"80": {
    "doc": "Templates cookbook",
    "title": "Power-law template üöß",
    "content": " ",
    "url": "http://localhost:4000/astrocook/templates_cb.html#power-law-template-",
    "relUrl": "/templates_cb.html#power-law-template-"
  },"81": {
    "doc": "Managing workflows",
    "title": "Managing workflows",
    "content": " ",
    "url": "http://localhost:4000/astrocook/workflows.html",
    "relUrl": "/workflows.html"
  },"82": {
    "doc": "Managing workflows",
    "title": "Table of contents",
    "content": ". | Logging | Scripting | . ",
    "url": "http://localhost:4000/astrocook/workflows.html#table-of-contents",
    "relUrl": "/workflows.html#table-of-contents"
  },"83": {
    "doc": "Managing workflows",
    "title": "Logging",
    "content": "Astrocook is equipped with a built-in logging tool, to keep track of the analysis as it is performed. Recipe calls and other relevant actions are organized into a workflow which is continuously recorded in JSON format for later reference. Each session is logged separately. To visualize the current log of a session, select it on the main window and choose View &gt; Session log: . Like the example above, every workflow starts with a call to recipe GUIPanelSess._on_open (which opens a new session) and ends with a call to recipe GUI._refresh (which refreshes the GUI to reflect any change in the data). Other recipes are inserted between these two, with all their relevant parameters: . Through the Session log window, you can: . | inspect and adjust the JSON script; | re-run the workflow from the start, possibly omitting some steps (useful to correct mistakes or ‚Äúundo‚Äù the last operation); | save the workflow to re-execute it later. | . Logs are saved as .json files by clicking on the Save button. Like .acs archives, .json files can be directly opened by Astrocook (either with File &gt; Open... or as argument of python ac_gui.py from the command line). When a .json file is opened, the log is used to re-build the session from scratch. Workflows follow a strict inheritance rule: when a new session is created, it is assigned the full log of the procedure that brought to its creation. This happens when a recipe spawns a new session, or when a session is opened from a previously saved .json file. In this way, the new session is totally independent from its source, and its log can be saved again in its entirety, without reference to a previously saved .json file. Workflows can be re-run at any moment, either by clicking on the Re-run button in the Session log window, or by right-clicking on the session list and choosing Re-run. When this is done, the session is destroyed and re-built from scratch using its log. If the workflow included recipes spawning new sessions, these are also re-built. ",
    "url": "http://localhost:4000/astrocook/workflows.html#logging",
    "relUrl": "/workflows.html#logging"
  },"84": {
    "doc": "Managing workflows",
    "title": "Scripting",
    "content": "You can of course create your own workflows outside of Astrocook, following the same JSON syntax used by the automatic log tool. The cookbook with all the current recipes and their parameters is available here. To use a recipe, you can copy-paste the JSON template and put proper values in the XXX placeholders. Shell scripting can be effectively used to create and/or edit JSON files at runtime and feed them to Astrocook. This may be useful, for instance, to run the same workflow on different input data, possibly with different parameters. Not all custom-made workflows are guaranteed to run smoothly on Astrocook. When writing your JSON script, please adhere to the following rules: . | the workflow must start with a call to GUIPanelSess._on_open and must end with a call to GUI._refresh; | whenever a recipe spawn a new session, all subsequent recipes are run on the new session; to continue running recipes on the previous session, you must write a separate workflow. | . It is a good practice to design a workflow through the GUI first, and use the automatic log generated by Astrocook as a template for custom-made workflows. ",
    "url": "http://localhost:4000/astrocook/workflows.html#scripting",
    "relUrl": "/workflows.html#scripting"
  }
}
